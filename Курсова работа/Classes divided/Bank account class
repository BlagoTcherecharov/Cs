using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Bank
{
    internal abstract class BankAccount
    {   
        private const int MONTHS = 12;
        protected string customer;
        protected double credit_acc, deposit_acc, mortgage_acc, monthly_interest_pourcentage;
        protected double deposit_balance, deposit, withdraw;
        protected bool error;
        protected int choice;
        protected string[] name_choice = new string[] { "credit balance", "deposit balance", "mortgage balance" };

        public BankAccount()
        {
            error = false;
            choice = 0;
            customer = string.Empty;
            credit_acc = deposit_acc = mortgage_acc = monthly_interest_pourcentage = deposit_balance = deposit = withdraw = 0;
        }

        public void BalanceInfo()
        {
            Console.Write("Enter name: ");
            customer = Console.ReadLine();
            Console.Write("Enter credit balance: $");
            credit_acc = Convert.ToDouble(Console.ReadLine());
            Console.Write("Enter deposit balance: $");
            deposit_acc = Convert.ToDouble(Console.ReadLine());
            Console.Write("Enter mortgage balance: $");
            mortgage_acc = Convert.ToDouble(Console.ReadLine());
            Console.Write("Enter monthly interest pourcentage: ");
            monthly_interest_pourcentage = Convert.ToDouble(Console.ReadLine());

            Console.Clear();
        }

        public void Deposit()
        {
            while (error == false)
            {
                Console.WriteLine("Where do you want to deposit your money ");
                Console.WriteLine("1. Credit balance");
                Console.WriteLine("2. Deposit balance");
                Console.WriteLine("3. Mortgage balance");
                choice = int.Parse(Console.ReadLine());

                Console.Clear();

                if (choice < 1 || choice > 3)
                {
                    error = false;
                    Console.WriteLine("Error, choice isn't valid!");
                }
                else
                {
                    error = true;
                }
            }

            Console.WriteLine("How much money do you want to deposit in your " + name_choice[choice - 1] + " today? ");
            deposit = Convert.ToDouble(Console.ReadLine());

            switch (choice)
            {
                case 1:
                    credit_acc += deposit; break;
                case 2:
                    deposit_acc += deposit; break;
                case 3:
                    mortgage_acc += deposit; break;
            }
            Console.Clear();

            error = false;
        }

        public void Withdraw()
        {
            do
            {
                Console.WriteLine("How much money do you want to withdraw from your deposit account today? ");
                withdraw = Convert.ToDouble(Console.ReadLine());

                Console.Clear();

                if (withdraw > deposit_acc)
                {
                    Console.WriteLine("Error, you can't withdraw more money than you have in your account!");
                }

            } while (withdraw > deposit_acc);

            deposit_acc -= withdraw;
        }
        public void InterestDeposit()
        {
            deposit_balance = deposit_acc;
            Console.WriteLine("\nDeposit Interest:");
            if (deposit_acc < 0 || deposit_acc >= 1000)
            {
                Console.WriteLine("You will need to pay $" + Math.Round(deposit_acc * monthly_interest_pourcentage / 100, 2) + " next month if no money is deposited or withdrawn.");

                for (int i = 0; i < MONTHS; i++)
                {
                    deposit_balance -= deposit_balance * monthly_interest_pourcentage / 100;
                }
                Console.WriteLine("You will need to pay in total $" + Math.Round(deposit_acc - deposit_balance, 2) + " in interest on the deposit balance next year if no money is deposited or withdrawn.");
            }
            else
                Console.WriteLine("You don't need to pay any interests on the deposit balance if no money is deposited or withdrawn.");

        }
    }
}
